from abc import ABC
import math
from V2.Problem.AbstractProblem import Problem


class PiTest(Problem, ABC):
    def __init__(self):
        super().__init__()

    def run(self, setMin, setMax):
        """
        Let each of the numbers represent the term in the Nilakantha Series.
        The first term, 0 is 4/(2*3*4)
        :param setMin:
        :param setMax:
        :return:
        """
        for num in range(setMin, setMax):
            self.res.append(4 / ((num * 2 + 2) * (num * 2 + 3) * (num * 2 + 4)))


def pi_sum(start_is_even_index, lst):
    res = 0
    for i in range(0, len(lst), 2):
        if start_is_even_index:
            res += lst[i]
        else:
            res -= lst[i]
    for i in range(1, len(lst), 2):
        if start_is_even_index:
            res -= lst[i]
        else:
            res += lst[i]
    return res


test = [0.16666666666666666, 0.06666666666666667, 0.03333333333333333, 0.01904761904761905, 0.011904761904761904, 0.007936507936507936, 0.005555555555555556, 0.00404040404040404, 0.0030303030303030303, 0.002331002331002331, 0.0018315018315018315, 0.0014652014652014652, 0.0011904761904761906, 0.000980392156862745, 0.0008169934640522876, 0.0006879944960440316, 0.0005847953216374269, 0.0005012531328320802, 0.0004329004329004329, 0.0003764351590438547, 0.00032938076416337287, 0.0002898550724637681, 0.0002564102564102564, 0.0002279202279202279, 0.0002035002035002035, 0.00018244845831052726, 0.00016420361247947455, 0.00014831294030404152, 0.00013440860215053763, 0.00012218963831867058, 0.00011140819964349375, 0.00010185892538833715, 9.337068160597572e-05, 8.58000858000858e-05, 7.90263948158685e-05, 7.2947441368494e-05, 6.747638326585695e-05, 6.253908692933083e-05, 5.8072009291521487e-05, 5.402047375955487e-05, 5.033725963958522e-05, 4.698144233027954e-05, 4.391743522178305e-05, 4.111419467571179e-05, 3.85445575084798e-05, 3.618468664061369e-05, 3.401360544217687e-05, 3.201280512204882e-05, 3.0165912518853696e-05, 2.845840803665443e-05, 2.6877385367951407e-05, 2.5411346166063148e-05, 2.405002405002405e-05, 2.27842333105491e-05, 2.160573848414139e-05, 2.0507141612066402e-05, 1.948178453146308e-05, 1.852366398073539e-05, 1.7627357659086903e-05, 1.678795967532086e-05, 1.6001024065540195e-05, 1.5262515262515263e-05, 1.4568764568764569e-05, 1.3916431826879588e-05, 1.3302471599223136e-05, 1.272410326882213e-05, 1.2178784557301181e-05, 1.166418802671099e-05, 1.11781801922647e-05, 1.0718802924089437e-05, 1.0284256859599325e-05, 9.872886585215353e-06, 9.48316737790422e-06, 9.11369332421964e-06, 8.7631666579035e-06, 8.43038817722362e-06, 8.114248620577734e-06, 7.81372089388967e-06, 7.527853056308341e-06, 7.255761981983943e-06, 6.996627625484516e-06, 6.749687826938004e-06, 6.514233600416911e-06, 6.289604855574948e-06, 6.0751865082258025e-06, 5.8704049405327976e-06, 5.674724775848371e-06, 5.487645937084139e-06, 5.308700960874874e-06, 5.137452542782136e-06, 4.9734912914167484e-06, 4.816433671687798e-06, 4.665920119447555e-06, 4.521613311629589e-06, 4.383196577600112e-06, 4.250372438884957e-06, 4.122861265718409e-06, 4.0004000400040005e-06, 3.882741215298e-06, 3.7696516653378645e-06]
print(pi_sum(True, test))